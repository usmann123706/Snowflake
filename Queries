
CREATE DATABASE SOCIAL_MEDIA_FLOODGATES 
USE DATABASE SOCIAL_MEDIA_FLOODGATES;
CREATE TABLE SOCIAL_MEDIA_FLOODGATES.PUBLIC.TWEET_INGEST 
("RAW_STATUS" VARIANT)
CREATE FILE FORMAT SOCIAL_MEDIA_FLOODGATES.PUBLIC.JSON_FILE_FORMAT 
TYPE = 'JSON' 
COMPRESSION = 'AUTO' 
ENABLE_OCTAL = FALSE 
ALLOW_DUPLICATE = FALSE 
STRIP_OUTER_ARRAY = TRUE 
STRIP_NULL_VALUES = FALSE 
IGNORE_UTF8_ERRORS = FALSE;
SELECT RAW_STATUS FROM TWEET_INGEST;
SELECT RAW_STATUS:entities FROM TWEET_INGEST;
SELECT RAW_STATUS:entities:hashtags FROM TWEET_INGEST;
SELECT RAW_STATUS:entities:hashtags[0].text FROM TWEET_INGEST;
SELECT RAW_STATUS:entities:hashtags[0].text FROM TWEET_INGEST
WHERE RAW_STATUS:entities:hashtags[0].text is not null;
SELECT RAW_STATUS:created_at::DATE FROM TWEET_INGEST ORDER BY RAW_STATUS:created_at::DATE;
SELECT value FROM TWEET_INGEST,LATERAL FLATTEN
(input => RAW_STATUS:entities:hashtags);
SELECT value:text::VARCHAR FROM TWEET_INGEST,LATERAL FLATTEN
(input => RAW_STATUS:entities:hashtags);
SELECT value:text::VARCHAR AS THE_HASHTAG FROM TWEET_INGEST,LATERAL FLATTEN
(input => RAW_STATUS:entities:hashtags);
SELECT RAW_STATUS:user:id AS USER_ID
,RAW_STATUS:id AS TWEET_ID
,value:text::VARCHAR AS HASHTAG_TEXT
FROM TWEET_INGEST
,LATERAL FLATTEN
(input => RAW_STATUS:entities:hashtags);
create or replace view SOCIAL_MEDIA_FLOODGATES.PUBLIC.HASHTAGS_NORMALIZED as
(SELECT RAW_STATUS:user:id AS USER_ID
,RAW_STATUS:id AS TWEET_ID
,value:text::VARCHAR AS HASHTAG_TEXT
FROM TWEET_INGEST
,LATERAL FLATTEN
(input => RAW_STATUS:entities:hashtags)
);
